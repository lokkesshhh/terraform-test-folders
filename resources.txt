# resource "azurerm_resource_group" "azrm" {
#   # count = 3
#   name = "rg1"
#   # name     = "my-resource-group_${count.index}"
#   location = "eastus"
# }
# # resource "azurerm_resource_group" "fromprovider2" {

# #   name     = "two"
# #   location = "WESTUS"
# #   provider = azurerm.provider2-westUS

# # }

# resource "random_string" "new1" {
#   length  = 16
#   special = false
#   upper   = false
# }

# # # resource "azurerm_storage_account" "st1" {
# # #   name                      = "mysa${random_string.new1.id}"
# # #   account_replication_type  = "GRS"
# # #   resource_group_name       = azurerm_resource_group.azrm.name
# # #   account_tier              = "Standard"
# # #   location                  = "eastus"
# # #   account_encryption_source = "Microsoft.Storage"
# # #   tags = {
# # #     env = "staging"
# # #   }

# # # }

# resource "azurerm_virtual_network" "vmnetwork" {
#   name                = "virtualNetwork1"
#   location            = azurerm_resource_group.azrm.location
#   resource_group_name = azurerm_resource_group.azrm.name
#   address_space       = ["10.0.0.0/16"]
#   # dns_servers         = ["10.0.0.4", "10.0.0.5"]
#   tags = {
#     env = "dev"
#   }


# }

# resource "azurerm_subnet" "sn1" {

#   name                 = "internal"
#   resource_group_name  = azurerm_resource_group.azrm.name
#   virtual_network_name = azurerm_virtual_network.vmnetwork.name
#   address_prefixes     = ["10.0.2.0/24"]

# }

# resource "azurerm_public_ip" "pubip" {

#   # depends_on = [ azurerm_virtual_network.vmnetwork,
#   # azurerm_subnet.sn1 ]
#   count =2
#   name                = "acceptanceTestPublicIp${count.index}"
#   resource_group_name = azurerm_resource_group.azrm.name
#   location            = azurerm_resource_group.azrm.location
#   allocation_method   = "Static"
#   domain_name_label   = "check-string${random_string.new1.id}"

#   tags = {
#     environment = "Production"
#   }
# }


# resource "azurerm_network_interface" "vmnic" {
#   count=2
#   name                = "vmnic${count.index}"
#   location            = azurerm_resource_group.azrm.location
#   resource_group_name = azurerm_resource_group.azrm.name

#   ip_configuration {
#     name                          = "internal"
#     subnet_id                     = azurerm_subnet.sn1.id
#     private_ip_address_allocation = "Dynamic"
#     public_ip_address_id          = element(azurerm_public_ip.pubip[*].id,count.index)
#   }
# }


# # resource "azurerm_linux_virtual_machine" "linux_machine" {
# #   name                  = "mymachine-linux"
# #   location              = azurerm_resource_group.azrm.location
# #   resource_group_name   = azurerm_resource_group.azrm.name
# #   admin_username        = "lokesh"
# #   size                  = "Standard_DS1_v2"
# #   network_interface_ids = [azurerm_network_interface.vmnic.id]

# #   admin_ssh_key {
# #     username   = "lokesh"
# #     public_key = file("${path.module}/ssh-keys/terraform-azure.pub")
# #   }
# #   os_disk {
# #     name                 = "OSDISK"
# #     caching              = "ReadWrite"
# #     storage_account_type = "Standard_LRS"
# #   }
# #   source_image_reference {
# #     publisher = "Canonical"
# #     offer     = "0001-com-ubuntu-server-focal"
# #     sku       = "20_04-lts"
# #     version   = "latest"
# #   }
# # }
# # # resource "azurerm_ssh_public_key" "sshkey" {
# # #   name                = "ssh_key"
# # #   resource_group_name = azurerm_resource_group.azrm.name
# # #   location            = azurerm_resource_group.azrm.location
# # #   public_key          = file("~/.ssh/id_rsa.pub")
# # # }


# # # ssh-keygen \
# # #     -m PEM \
# # #     -t rsa \
# # #     -b 4096 \
# # #     # -C "azureuser@myserver" \